/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ClientConfigurationScreen.java
 *
 * Created on 30.11.2010, 14:25:32
 */
package de.noobisoft.powerpong.config;

import java.awt.Toolkit;
import javax.swing.JOptionPane;

/**
 *
 * @author Lars George
 * @author Chris Krauß
 */
public class ClientConfigurationScreen extends javax.swing.JFrame {

    /**
     *
     */
    private static final long	serialVersionUID	= 639376016938502548L;

    /** Creates new form ClientConfigurationScreen */
    public ClientConfigurationScreen() {
        initComponents();
        setIconImage(Toolkit.getDefaultToolkit().createImage("textures/client_trayicon.png"));
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        lbl_grafikeinst = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        txt_port = new javax.swing.JTextField();
        lbl_port = new javax.swing.JLabel();
        txt_ip = new javax.swing.JTextField();
        rb_red = new javax.swing.JRadioButton();
        btn_start = new javax.swing.JButton();
        cb_vollbild = new javax.swing.JCheckBox();
        cb_world = new javax.swing.JComboBox();
        lbl_X = new javax.swing.JLabel();
        txt_height = new javax.swing.JTextField();
        lbl_auflösung = new javax.swing.JLabel();
        txt_width = new javax.swing.JTextField();
        lbl_byLC = new javax.swing.JLabel();
        lbl_welt = new javax.swing.JLabel();
        lbl_powerpong = new javax.swing.JLabel();
        lbl_team = new javax.swing.JLabel();
        rb_blue = new javax.swing.JRadioButton();
        txt_name = new javax.swing.JTextField();
        lbl_name = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        lbl_spielereinst = new javax.swing.JLabel();
        lbl_servereinst = new javax.swing.JLabel();
        lbl_ip = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        lbl_grafikeinst1 = new javax.swing.JLabel();
        cb_soundAn = new javax.swing.JCheckBox();
        cb_musikAn = new javax.swing.JCheckBox();
        cb_isHolodeck = new javax.swing.JCheckBox();
        cb_startOwnServer = new javax.swing.JCheckBox();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Powerpong");
        setBounds(new java.awt.Rectangle(200, 200, 0, 0));
        setResizable(false);

        lbl_grafikeinst.setFont(new java.awt.Font("Tahoma", 1, 11));
        lbl_grafikeinst.setText("Grafik-Einstellungen:");

        txt_port.setText("9090");

        lbl_port.setText("Port:");

        txt_ip.setText("127.0.0.1");
        txt_ip.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_ipActionPerformed(evt);
            }
        });

        buttonGroup1.add(rb_red);
        rb_red.setSelected(true);
        rb_red.setText("Red");

        btn_start.setText("Start");
        btn_start.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_startonClick(evt);
            }
        });

        cb_vollbild.setText("Vollbild");
        cb_vollbild.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onClickFullScreen(evt);
            }
        });

        cb_world.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Grimm Night", "Stormy Days", "Miramar", "Violent Days", "Interstellar" }));

        lbl_X.setText("X");

        txt_height.setText("768");
        txt_height.setPreferredSize(new java.awt.Dimension(30, 20));

        lbl_auflösung.setText("Auflösung:");

        txt_width.setText("1024");

        lbl_byLC.setText("by Lars George and Chris Krauss");

        lbl_welt.setText("Welt:");

        lbl_powerpong.setFont(new java.awt.Font("Tahoma", 1, 18));
        lbl_powerpong.setText("Powerpong");

        lbl_team.setText("Team:");

        buttonGroup1.add(rb_blue);
        rb_blue.setText("Blue");

        txt_name.setText("Player1");

        lbl_name.setText("Name:");

        lbl_spielereinst.setFont(new java.awt.Font("Tahoma", 1, 11));
        lbl_spielereinst.setText("Spieler-Einstellungen:");

        lbl_servereinst.setFont(new java.awt.Font("Tahoma", 1, 11));
        lbl_servereinst.setText("Server-Einstellungen:");

        lbl_ip.setText("IP:");

        lbl_grafikeinst1.setFont(new java.awt.Font("Tahoma", 1, 11));
        lbl_grafikeinst1.setText("Sound-Einstellungen:");
        lbl_grafikeinst1.setName("lbl_sound"); // NOI18N

        cb_soundAn.setSelected(true);
        cb_soundAn.setText("Sound an");
        cb_soundAn.setName("cb_sound"); // NOI18N
        cb_soundAn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_soundAnActionPerformed(evt);
            }
        });

        cb_musikAn.setSelected(true);
        cb_musikAn.setText("Musik an");
        cb_musikAn.setName("cb_musik"); // NOI18N

        cb_isHolodeck.setText("Holodeck-Version");
        cb_isHolodeck.setEnabled(false);

        cb_startOwnServer.setText("Start own server");
        cb_startOwnServer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clickStartOwnServer(evt);
            }
        });

        jMenu1.setText("Hilfe");
        jMenu1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onAboutClick(evt);
            }
        });

        jMenuItem1.setText("About");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(lbl_byLC))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addComponent(lbl_powerpong)))
                .addGap(33, 33, 33))
            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 233, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbl_spielereinst)
                .addContainerGap(101, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbl_name)
                    .addComponent(lbl_team))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(rb_red)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rb_blue))
                    .addComponent(txt_name, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE))
                .addContainerGap())
            .addComponent(jSeparator2, javax.swing.GroupLayout.DEFAULT_SIZE, 233, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbl_servereinst)
                .addContainerGap(102, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btn_start, javax.swing.GroupLayout.DEFAULT_SIZE, 213, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(jSeparator3, javax.swing.GroupLayout.DEFAULT_SIZE, 233, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cb_soundAn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cb_musikAn))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 4, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lbl_grafikeinst1)))
                .addContainerGap(89, Short.MAX_VALUE))
            .addComponent(jSeparator4, javax.swing.GroupLayout.DEFAULT_SIZE, 233, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbl_grafikeinst)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(cb_isHolodeck)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_auflösung)
                            .addComponent(lbl_welt))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cb_world, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txt_width, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lbl_X)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_height, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cb_vollbild)))))
                .addContainerGap(10, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(cb_startOwnServer)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbl_ip)
                        .addGap(18, 18, 18)
                        .addComponent(txt_ip, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbl_port)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_port, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbl_powerpong, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbl_byLC)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbl_spielereinst)
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbl_name)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txt_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rb_red)
                            .addComponent(rb_blue)
                            .addComponent(lbl_team))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(lbl_servereinst)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txt_ip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lbl_port)
                        .addComponent(txt_port, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lbl_ip))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cb_startOwnServer)
                .addGap(13, 13, 13)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 3, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lbl_grafikeinst)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_auflösung)
                    .addComponent(txt_width, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_X)
                    .addComponent(txt_height, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cb_vollbild))
                .addGap(4, 4, 4)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cb_world, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_welt))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cb_isHolodeck)
                .addGap(4, 4, 4)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 7, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lbl_grafikeinst1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cb_soundAn)
                    .addComponent(cb_musikAn))
                .addGap(18, 18, 18)
                .addComponent(btn_start, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>                        

    private void txt_ipActionPerformed(java.awt.event.ActionEvent evt) {                                       
        // TODO add your handling code here:
}                                      

    private void btn_startonClick(java.awt.event.ActionEvent evt) {                                  
        this.setVisible(false);
}                                 

    private void onAboutClick(java.awt.event.ActionEvent evt) {                              
        
    }                             

    private void cb_soundAnActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
    }                                          

    private void onClickFullScreen(java.awt.event.ActionEvent evt) {                                   
        if(cb_vollbild.isSelected())
        {
            txt_width.setEnabled(false);
            txt_height.setEnabled(false);
        }
        else
        {
            txt_width.setEnabled(true);
            txt_height.setEnabled(true);
        }
    }                                  

    private void clickStartOwnServer(java.awt.event.ActionEvent evt) {                                     
        if(getCb_startOwnServer().isSelected())
        {
            txt_ip.setEnabled(false);
            txt_port.setEnabled(false);
        }
        else
        {
            txt_ip.setEnabled(true);
            txt_port.setEnabled(true);
        }
    }                                    

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(this,
                "Powerong\nBy Lars George and Chris Krauss\n\nSkyBoxes by Jockum Skoglund aka hipshot\nhipshot@zfight.com\nwww.zfight.com");
    }                                          

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new ClientConfigurationScreen().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify                     
    private javax.swing.JButton btn_start;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JCheckBox cb_isHolodeck;
    private javax.swing.JCheckBox cb_musikAn;
    private javax.swing.JCheckBox cb_soundAn;
    private javax.swing.JCheckBox cb_startOwnServer;
    private javax.swing.JCheckBox cb_vollbild;
    private javax.swing.JComboBox cb_world;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JLabel lbl_X;
    private javax.swing.JLabel lbl_auflösung;
    private javax.swing.JLabel lbl_byLC;
    private javax.swing.JLabel lbl_grafikeinst;
    private javax.swing.JLabel lbl_grafikeinst1;
    private javax.swing.JLabel lbl_ip;
    private javax.swing.JLabel lbl_name;
    private javax.swing.JLabel lbl_port;
    private javax.swing.JLabel lbl_powerpong;
    private javax.swing.JLabel lbl_servereinst;
    private javax.swing.JLabel lbl_spielereinst;
    private javax.swing.JLabel lbl_team;
    private javax.swing.JLabel lbl_welt;
    private javax.swing.JRadioButton rb_blue;
    private javax.swing.JRadioButton rb_red;
    private javax.swing.JTextField txt_height;
    private javax.swing.JTextField txt_ip;
    private javax.swing.JTextField txt_name;
    private javax.swing.JTextField txt_port;
    private javax.swing.JTextField txt_width;
    // End of variables declaration                   

    /**
     * @return the cb_vollbild
     */
    public javax.swing.JCheckBox getCb_vollbild() {
        return cb_vollbild;
    }

    /**
     * @return the cb_soundAn
     */
    public javax.swing.JCheckBox getCb_soundAn() {
        return cb_soundAn;
    }

    /**
     * @return the cb_musikAn
     */
    public javax.swing.JCheckBox getCb_musikAn() {
        return cb_musikAn;
    }

    /**
     * @return the cb_world
     */
    public javax.swing.JComboBox getCb_world() {
        return cb_world;
    }

    /**
     * @return the rb_blue
     */
    public javax.swing.JRadioButton getRb_blue() {
        return rb_blue;
    }

    /**
     * @return the rb_red
     */
    public javax.swing.JRadioButton getRb_red() {
        return rb_red;
    }

    /**
     * @return the txt_height
     */
    public javax.swing.JTextField getTxt_height() {
        return txt_height;
    }

    /**
     * @return the txt_ip
     */
    public javax.swing.JTextField getTxt_ip() {
        return txt_ip;
    }

    /**
     * @return the txt_name
     */
    public javax.swing.JTextField getTxt_name() {
        return txt_name;
    }

    /**
     * @return the txt_port
     */
    public javax.swing.JTextField getTxt_port() {
        return txt_port;
    }

    /**
     * @return the txt_width
     */
    public javax.swing.JTextField getTxt_width() {
        return txt_width;
    }

    /**
     * @return the cb_isHolodeck
     */
    public javax.swing.JCheckBox getCb_isHolodeck() {
        return cb_isHolodeck;
    }

    /**
     * @return the cb_startOwnServer
     */
    public javax.swing.JCheckBox getCb_startOwnServer() {
        return cb_startOwnServer;
    }
}
